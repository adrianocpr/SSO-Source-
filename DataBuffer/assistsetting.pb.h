// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: assistsetting.proto

#ifndef PROTOBUF_assistsetting_2eproto__INCLUDED
#define PROTOBUF_assistsetting_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace gamecfg {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_assistsetting_2eproto();
void protobuf_AssignDesc_assistsetting_2eproto();
void protobuf_ShutdownFile_assistsetting_2eproto();

class AssistSetting;

// ===================================================================

class AssistSetting : public ::google::protobuf::Message {
 public:
  AssistSetting();
  virtual ~AssistSetting();

  AssistSetting(const AssistSetting& from);

  inline AssistSetting& operator=(const AssistSetting& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AssistSetting& default_instance();

  void Swap(AssistSetting* other);

  // implements Message ----------------------------------------------

  AssistSetting* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AssistSetting& from);
  void MergeFrom(const AssistSetting& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool autoSelMonster = 1 [default = false];
  inline bool has_autoselmonster() const;
  inline void clear_autoselmonster();
  static const int kAutoSelMonsterFieldNumber = 1;
  inline bool autoselmonster() const;
  inline void set_autoselmonster(bool value);

  // optional bool autoMedicine = 2 [default = false];
  inline bool has_automedicine() const;
  inline void clear_automedicine();
  static const int kAutoMedicineFieldNumber = 2;
  inline bool automedicine() const;
  inline void set_automedicine(bool value);

  // optional int32 medicineHpRateIndex = 3 [default = 0];
  inline bool has_medicinehprateindex() const;
  inline void clear_medicinehprateindex();
  static const int kMedicineHpRateIndexFieldNumber = 3;
  inline ::google::protobuf::int32 medicinehprateindex() const;
  inline void set_medicinehprateindex(::google::protobuf::int32 value);

  // optional int32 medicineId = 4 [default = 0];
  inline bool has_medicineid() const;
  inline void clear_medicineid();
  static const int kMedicineIdFieldNumber = 4;
  inline ::google::protobuf::int32 medicineid() const;
  inline void set_medicineid(::google::protobuf::int32 value);

  // optional bool isAnchored = 5 [default = false];
  inline bool has_isanchored() const;
  inline void clear_isanchored();
  static const int kIsAnchoredFieldNumber = 5;
  inline bool isanchored() const;
  inline void set_isanchored(bool value);

  // @@protoc_insertion_point(class_scope:gamecfg.AssistSetting)
 private:
  inline void set_has_autoselmonster();
  inline void clear_has_autoselmonster();
  inline void set_has_automedicine();
  inline void clear_has_automedicine();
  inline void set_has_medicinehprateindex();
  inline void clear_has_medicinehprateindex();
  inline void set_has_medicineid();
  inline void clear_has_medicineid();
  inline void set_has_isanchored();
  inline void clear_has_isanchored();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  bool autoselmonster_;
  bool automedicine_;
  bool isanchored_;
  ::google::protobuf::int32 medicinehprateindex_;
  ::google::protobuf::int32 medicineid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_assistsetting_2eproto();
  friend void protobuf_AssignDesc_assistsetting_2eproto();
  friend void protobuf_ShutdownFile_assistsetting_2eproto();

  void InitAsDefaultInstance();
  static AssistSetting* default_instance_;
};
// ===================================================================


// ===================================================================

// AssistSetting

// optional bool autoSelMonster = 1 [default = false];
inline bool AssistSetting::has_autoselmonster() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AssistSetting::set_has_autoselmonster() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AssistSetting::clear_has_autoselmonster() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AssistSetting::clear_autoselmonster() {
  autoselmonster_ = false;
  clear_has_autoselmonster();
}
inline bool AssistSetting::autoselmonster() const {
  return autoselmonster_;
}
inline void AssistSetting::set_autoselmonster(bool value) {
  set_has_autoselmonster();
  autoselmonster_ = value;
}

// optional bool autoMedicine = 2 [default = false];
inline bool AssistSetting::has_automedicine() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AssistSetting::set_has_automedicine() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AssistSetting::clear_has_automedicine() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AssistSetting::clear_automedicine() {
  automedicine_ = false;
  clear_has_automedicine();
}
inline bool AssistSetting::automedicine() const {
  return automedicine_;
}
inline void AssistSetting::set_automedicine(bool value) {
  set_has_automedicine();
  automedicine_ = value;
}

// optional int32 medicineHpRateIndex = 3 [default = 0];
inline bool AssistSetting::has_medicinehprateindex() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void AssistSetting::set_has_medicinehprateindex() {
  _has_bits_[0] |= 0x00000004u;
}
inline void AssistSetting::clear_has_medicinehprateindex() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void AssistSetting::clear_medicinehprateindex() {
  medicinehprateindex_ = 0;
  clear_has_medicinehprateindex();
}
inline ::google::protobuf::int32 AssistSetting::medicinehprateindex() const {
  return medicinehprateindex_;
}
inline void AssistSetting::set_medicinehprateindex(::google::protobuf::int32 value) {
  set_has_medicinehprateindex();
  medicinehprateindex_ = value;
}

// optional int32 medicineId = 4 [default = 0];
inline bool AssistSetting::has_medicineid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void AssistSetting::set_has_medicineid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void AssistSetting::clear_has_medicineid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void AssistSetting::clear_medicineid() {
  medicineid_ = 0;
  clear_has_medicineid();
}
inline ::google::protobuf::int32 AssistSetting::medicineid() const {
  return medicineid_;
}
inline void AssistSetting::set_medicineid(::google::protobuf::int32 value) {
  set_has_medicineid();
  medicineid_ = value;
}

// optional bool isAnchored = 5 [default = false];
inline bool AssistSetting::has_isanchored() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void AssistSetting::set_has_isanchored() {
  _has_bits_[0] |= 0x00000010u;
}
inline void AssistSetting::clear_has_isanchored() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void AssistSetting::clear_isanchored() {
  isanchored_ = false;
  clear_has_isanchored();
}
inline bool AssistSetting::isanchored() const {
  return isanchored_;
}
inline void AssistSetting::set_isanchored(bool value) {
  set_has_isanchored();
  isanchored_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace gamecfg

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_assistsetting_2eproto__INCLUDED
