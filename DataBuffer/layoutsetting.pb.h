// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: layoutsetting.proto

#ifndef PROTOBUF_layoutsetting_2eproto__INCLUDED
#define PROTOBUF_layoutsetting_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace gamecfg {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_layoutsetting_2eproto();
void protobuf_AssignDesc_layoutsetting_2eproto();
void protobuf_ShutdownFile_layoutsetting_2eproto();

class LayoutSetting;
class LayoutSetting_SaveMark;

// ===================================================================

class LayoutSetting_SaveMark : public ::google::protobuf::Message {
 public:
  LayoutSetting_SaveMark();
  virtual ~LayoutSetting_SaveMark();

  LayoutSetting_SaveMark(const LayoutSetting_SaveMark& from);

  inline LayoutSetting_SaveMark& operator=(const LayoutSetting_SaveMark& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LayoutSetting_SaveMark& default_instance();

  void Swap(LayoutSetting_SaveMark* other);

  // implements Message ----------------------------------------------

  LayoutSetting_SaveMark* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LayoutSetting_SaveMark& from);
  void MergeFrom(const LayoutSetting_SaveMark& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional float pos_x = 1;
  inline bool has_pos_x() const;
  inline void clear_pos_x();
  static const int kPosXFieldNumber = 1;
  inline float pos_x() const;
  inline void set_pos_x(float value);

  // optional float pos_y = 2;
  inline bool has_pos_y() const;
  inline void clear_pos_y();
  static const int kPosYFieldNumber = 2;
  inline float pos_y() const;
  inline void set_pos_y(float value);

  // optional float pos_z = 3;
  inline bool has_pos_z() const;
  inline void clear_pos_z();
  static const int kPosZFieldNumber = 3;
  inline float pos_z() const;
  inline void set_pos_z(float value);

  // optional string name = 4;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 4;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // optional int32 instanceId = 5;
  inline bool has_instanceid() const;
  inline void clear_instanceid();
  static const int kInstanceIdFieldNumber = 5;
  inline ::google::protobuf::int32 instanceid() const;
  inline void set_instanceid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:gamecfg.LayoutSetting.SaveMark)
 private:
  inline void set_has_pos_x();
  inline void clear_has_pos_x();
  inline void set_has_pos_y();
  inline void clear_has_pos_y();
  inline void set_has_pos_z();
  inline void clear_has_pos_z();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_instanceid();
  inline void clear_has_instanceid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  float pos_x_;
  float pos_y_;
  ::std::string* name_;
  float pos_z_;
  ::google::protobuf::int32 instanceid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_layoutsetting_2eproto();
  friend void protobuf_AssignDesc_layoutsetting_2eproto();
  friend void protobuf_ShutdownFile_layoutsetting_2eproto();

  void InitAsDefaultInstance();
  static LayoutSetting_SaveMark* default_instance_;
};
// -------------------------------------------------------------------

class LayoutSetting : public ::google::protobuf::Message {
 public:
  LayoutSetting();
  virtual ~LayoutSetting();

  LayoutSetting(const LayoutSetting& from);

  inline LayoutSetting& operator=(const LayoutSetting& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LayoutSetting& default_instance();

  void Swap(LayoutSetting* other);

  // implements Message ----------------------------------------------

  LayoutSetting* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LayoutSetting& from);
  void MergeFrom(const LayoutSetting& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef LayoutSetting_SaveMark SaveMark;

  // accessors -------------------------------------------------------

  // optional float chatUpperRatioX = 1;
  inline bool has_chatupperratiox() const;
  inline void clear_chatupperratiox();
  static const int kChatUpperRatioXFieldNumber = 1;
  inline float chatupperratiox() const;
  inline void set_chatupperratiox(float value);

  // optional float chatUpperRatioY = 2;
  inline bool has_chatupperratioy() const;
  inline void clear_chatupperratioy();
  static const int kChatUpperRatioYFieldNumber = 2;
  inline float chatupperratioy() const;
  inline void set_chatupperratioy(float value);

  // optional float chatLowerRatioX = 3;
  inline bool has_chatlowerratiox() const;
  inline void clear_chatlowerratiox();
  static const int kChatLowerRatioXFieldNumber = 3;
  inline float chatlowerratiox() const;
  inline void set_chatlowerratiox(float value);

  // optional float chatLowerRatioY = 4;
  inline bool has_chatlowerratioy() const;
  inline void clear_chatlowerratioy();
  static const int kChatLowerRatioYFieldNumber = 4;
  inline float chatlowerratioy() const;
  inline void set_chatlowerratioy(float value);

  // repeated .gamecfg.LayoutSetting.SaveMark marks = 5;
  inline int marks_size() const;
  inline void clear_marks();
  static const int kMarksFieldNumber = 5;
  inline const ::gamecfg::LayoutSetting_SaveMark& marks(int index) const;
  inline ::gamecfg::LayoutSetting_SaveMark* mutable_marks(int index);
  inline ::gamecfg::LayoutSetting_SaveMark* add_marks();
  inline const ::google::protobuf::RepeatedPtrField< ::gamecfg::LayoutSetting_SaveMark >&
      marks() const;
  inline ::google::protobuf::RepeatedPtrField< ::gamecfg::LayoutSetting_SaveMark >*
      mutable_marks();

  // optional bool onlineNotify = 6 [default = false];
  inline bool has_onlinenotify() const;
  inline void clear_onlinenotify();
  static const int kOnlineNotifyFieldNumber = 6;
  inline bool onlinenotify() const;
  inline void set_onlinenotify(bool value);

  // optional bool friendAutoReply = 7 [default = false];
  inline bool has_friendautoreply() const;
  inline void clear_friendautoreply();
  static const int kFriendAutoReplyFieldNumber = 7;
  inline bool friendautoreply() const;
  inline void set_friendautoreply(bool value);

  // optional bool saveHistory = 8 [default = true];
  inline bool has_savehistory() const;
  inline void clear_savehistory();
  static const int kSaveHistoryFieldNumber = 8;
  inline bool savehistory() const;
  inline void set_savehistory(bool value);

  // optional bool lockQuickBar = 9 [default = false];
  inline bool has_lockquickbar() const;
  inline void clear_lockquickbar();
  static const int kLockQuickBarFieldNumber = 9;
  inline bool lockquickbar() const;
  inline void set_lockquickbar(bool value);

  // optional int32 quickBarType = 10 [default = 0];
  inline bool has_quickbartype() const;
  inline void clear_quickbartype();
  static const int kQuickBarTypeFieldNumber = 10;
  inline ::google::protobuf::int32 quickbartype() const;
  inline void set_quickbartype(::google::protobuf::int32 value);

  // optional int32 rightQuickBarType = 11 [default = 0];
  inline bool has_rightquickbartype() const;
  inline void clear_rightquickbartype();
  static const int kRightQuickBarTypeFieldNumber = 11;
  inline ::google::protobuf::int32 rightquickbartype() const;
  inline void set_rightquickbartype(::google::protobuf::int32 value);

  // repeated int32 questTraceBlockedIds = 12 [packed = true];
  inline int questtraceblockedids_size() const;
  inline void clear_questtraceblockedids();
  static const int kQuestTraceBlockedIdsFieldNumber = 12;
  inline ::google::protobuf::int32 questtraceblockedids(int index) const;
  inline void set_questtraceblockedids(int index, ::google::protobuf::int32 value);
  inline void add_questtraceblockedids(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      questtraceblockedids() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_questtraceblockedids();

  // @@protoc_insertion_point(class_scope:gamecfg.LayoutSetting)
 private:
  inline void set_has_chatupperratiox();
  inline void clear_has_chatupperratiox();
  inline void set_has_chatupperratioy();
  inline void clear_has_chatupperratioy();
  inline void set_has_chatlowerratiox();
  inline void clear_has_chatlowerratiox();
  inline void set_has_chatlowerratioy();
  inline void clear_has_chatlowerratioy();
  inline void set_has_onlinenotify();
  inline void clear_has_onlinenotify();
  inline void set_has_friendautoreply();
  inline void clear_has_friendautoreply();
  inline void set_has_savehistory();
  inline void clear_has_savehistory();
  inline void set_has_lockquickbar();
  inline void clear_has_lockquickbar();
  inline void set_has_quickbartype();
  inline void clear_has_quickbartype();
  inline void set_has_rightquickbartype();
  inline void clear_has_rightquickbartype();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  float chatupperratiox_;
  float chatupperratioy_;
  float chatlowerratiox_;
  float chatlowerratioy_;
  ::google::protobuf::RepeatedPtrField< ::gamecfg::LayoutSetting_SaveMark > marks_;
  bool onlinenotify_;
  bool friendautoreply_;
  bool savehistory_;
  bool lockquickbar_;
  ::google::protobuf::int32 quickbartype_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > questtraceblockedids_;
  mutable int _questtraceblockedids_cached_byte_size_;
  ::google::protobuf::int32 rightquickbartype_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(12 + 31) / 32];

  friend void  protobuf_AddDesc_layoutsetting_2eproto();
  friend void protobuf_AssignDesc_layoutsetting_2eproto();
  friend void protobuf_ShutdownFile_layoutsetting_2eproto();

  void InitAsDefaultInstance();
  static LayoutSetting* default_instance_;
};
// ===================================================================


// ===================================================================

// LayoutSetting_SaveMark

// optional float pos_x = 1;
inline bool LayoutSetting_SaveMark::has_pos_x() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LayoutSetting_SaveMark::set_has_pos_x() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LayoutSetting_SaveMark::clear_has_pos_x() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LayoutSetting_SaveMark::clear_pos_x() {
  pos_x_ = 0;
  clear_has_pos_x();
}
inline float LayoutSetting_SaveMark::pos_x() const {
  return pos_x_;
}
inline void LayoutSetting_SaveMark::set_pos_x(float value) {
  set_has_pos_x();
  pos_x_ = value;
}

// optional float pos_y = 2;
inline bool LayoutSetting_SaveMark::has_pos_y() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LayoutSetting_SaveMark::set_has_pos_y() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LayoutSetting_SaveMark::clear_has_pos_y() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LayoutSetting_SaveMark::clear_pos_y() {
  pos_y_ = 0;
  clear_has_pos_y();
}
inline float LayoutSetting_SaveMark::pos_y() const {
  return pos_y_;
}
inline void LayoutSetting_SaveMark::set_pos_y(float value) {
  set_has_pos_y();
  pos_y_ = value;
}

// optional float pos_z = 3;
inline bool LayoutSetting_SaveMark::has_pos_z() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void LayoutSetting_SaveMark::set_has_pos_z() {
  _has_bits_[0] |= 0x00000004u;
}
inline void LayoutSetting_SaveMark::clear_has_pos_z() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void LayoutSetting_SaveMark::clear_pos_z() {
  pos_z_ = 0;
  clear_has_pos_z();
}
inline float LayoutSetting_SaveMark::pos_z() const {
  return pos_z_;
}
inline void LayoutSetting_SaveMark::set_pos_z(float value) {
  set_has_pos_z();
  pos_z_ = value;
}

// optional string name = 4;
inline bool LayoutSetting_SaveMark::has_name() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void LayoutSetting_SaveMark::set_has_name() {
  _has_bits_[0] |= 0x00000008u;
}
inline void LayoutSetting_SaveMark::clear_has_name() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void LayoutSetting_SaveMark::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& LayoutSetting_SaveMark::name() const {
  return *name_;
}
inline void LayoutSetting_SaveMark::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void LayoutSetting_SaveMark::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void LayoutSetting_SaveMark::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* LayoutSetting_SaveMark::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* LayoutSetting_SaveMark::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void LayoutSetting_SaveMark::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 instanceId = 5;
inline bool LayoutSetting_SaveMark::has_instanceid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void LayoutSetting_SaveMark::set_has_instanceid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void LayoutSetting_SaveMark::clear_has_instanceid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void LayoutSetting_SaveMark::clear_instanceid() {
  instanceid_ = 0;
  clear_has_instanceid();
}
inline ::google::protobuf::int32 LayoutSetting_SaveMark::instanceid() const {
  return instanceid_;
}
inline void LayoutSetting_SaveMark::set_instanceid(::google::protobuf::int32 value) {
  set_has_instanceid();
  instanceid_ = value;
}

// -------------------------------------------------------------------

// LayoutSetting

// optional float chatUpperRatioX = 1;
inline bool LayoutSetting::has_chatupperratiox() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LayoutSetting::set_has_chatupperratiox() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LayoutSetting::clear_has_chatupperratiox() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LayoutSetting::clear_chatupperratiox() {
  chatupperratiox_ = 0;
  clear_has_chatupperratiox();
}
inline float LayoutSetting::chatupperratiox() const {
  return chatupperratiox_;
}
inline void LayoutSetting::set_chatupperratiox(float value) {
  set_has_chatupperratiox();
  chatupperratiox_ = value;
}

// optional float chatUpperRatioY = 2;
inline bool LayoutSetting::has_chatupperratioy() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LayoutSetting::set_has_chatupperratioy() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LayoutSetting::clear_has_chatupperratioy() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LayoutSetting::clear_chatupperratioy() {
  chatupperratioy_ = 0;
  clear_has_chatupperratioy();
}
inline float LayoutSetting::chatupperratioy() const {
  return chatupperratioy_;
}
inline void LayoutSetting::set_chatupperratioy(float value) {
  set_has_chatupperratioy();
  chatupperratioy_ = value;
}

// optional float chatLowerRatioX = 3;
inline bool LayoutSetting::has_chatlowerratiox() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void LayoutSetting::set_has_chatlowerratiox() {
  _has_bits_[0] |= 0x00000004u;
}
inline void LayoutSetting::clear_has_chatlowerratiox() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void LayoutSetting::clear_chatlowerratiox() {
  chatlowerratiox_ = 0;
  clear_has_chatlowerratiox();
}
inline float LayoutSetting::chatlowerratiox() const {
  return chatlowerratiox_;
}
inline void LayoutSetting::set_chatlowerratiox(float value) {
  set_has_chatlowerratiox();
  chatlowerratiox_ = value;
}

// optional float chatLowerRatioY = 4;
inline bool LayoutSetting::has_chatlowerratioy() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void LayoutSetting::set_has_chatlowerratioy() {
  _has_bits_[0] |= 0x00000008u;
}
inline void LayoutSetting::clear_has_chatlowerratioy() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void LayoutSetting::clear_chatlowerratioy() {
  chatlowerratioy_ = 0;
  clear_has_chatlowerratioy();
}
inline float LayoutSetting::chatlowerratioy() const {
  return chatlowerratioy_;
}
inline void LayoutSetting::set_chatlowerratioy(float value) {
  set_has_chatlowerratioy();
  chatlowerratioy_ = value;
}

// repeated .gamecfg.LayoutSetting.SaveMark marks = 5;
inline int LayoutSetting::marks_size() const {
  return marks_.size();
}
inline void LayoutSetting::clear_marks() {
  marks_.Clear();
}
inline const ::gamecfg::LayoutSetting_SaveMark& LayoutSetting::marks(int index) const {
  return marks_.Get(index);
}
inline ::gamecfg::LayoutSetting_SaveMark* LayoutSetting::mutable_marks(int index) {
  return marks_.Mutable(index);
}
inline ::gamecfg::LayoutSetting_SaveMark* LayoutSetting::add_marks() {
  return marks_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::gamecfg::LayoutSetting_SaveMark >&
LayoutSetting::marks() const {
  return marks_;
}
inline ::google::protobuf::RepeatedPtrField< ::gamecfg::LayoutSetting_SaveMark >*
LayoutSetting::mutable_marks() {
  return &marks_;
}

// optional bool onlineNotify = 6 [default = false];
inline bool LayoutSetting::has_onlinenotify() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void LayoutSetting::set_has_onlinenotify() {
  _has_bits_[0] |= 0x00000020u;
}
inline void LayoutSetting::clear_has_onlinenotify() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void LayoutSetting::clear_onlinenotify() {
  onlinenotify_ = false;
  clear_has_onlinenotify();
}
inline bool LayoutSetting::onlinenotify() const {
  return onlinenotify_;
}
inline void LayoutSetting::set_onlinenotify(bool value) {
  set_has_onlinenotify();
  onlinenotify_ = value;
}

// optional bool friendAutoReply = 7 [default = false];
inline bool LayoutSetting::has_friendautoreply() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void LayoutSetting::set_has_friendautoreply() {
  _has_bits_[0] |= 0x00000040u;
}
inline void LayoutSetting::clear_has_friendautoreply() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void LayoutSetting::clear_friendautoreply() {
  friendautoreply_ = false;
  clear_has_friendautoreply();
}
inline bool LayoutSetting::friendautoreply() const {
  return friendautoreply_;
}
inline void LayoutSetting::set_friendautoreply(bool value) {
  set_has_friendautoreply();
  friendautoreply_ = value;
}

// optional bool saveHistory = 8 [default = true];
inline bool LayoutSetting::has_savehistory() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void LayoutSetting::set_has_savehistory() {
  _has_bits_[0] |= 0x00000080u;
}
inline void LayoutSetting::clear_has_savehistory() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void LayoutSetting::clear_savehistory() {
  savehistory_ = true;
  clear_has_savehistory();
}
inline bool LayoutSetting::savehistory() const {
  return savehistory_;
}
inline void LayoutSetting::set_savehistory(bool value) {
  set_has_savehistory();
  savehistory_ = value;
}

// optional bool lockQuickBar = 9 [default = false];
inline bool LayoutSetting::has_lockquickbar() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void LayoutSetting::set_has_lockquickbar() {
  _has_bits_[0] |= 0x00000100u;
}
inline void LayoutSetting::clear_has_lockquickbar() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void LayoutSetting::clear_lockquickbar() {
  lockquickbar_ = false;
  clear_has_lockquickbar();
}
inline bool LayoutSetting::lockquickbar() const {
  return lockquickbar_;
}
inline void LayoutSetting::set_lockquickbar(bool value) {
  set_has_lockquickbar();
  lockquickbar_ = value;
}

// optional int32 quickBarType = 10 [default = 0];
inline bool LayoutSetting::has_quickbartype() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void LayoutSetting::set_has_quickbartype() {
  _has_bits_[0] |= 0x00000200u;
}
inline void LayoutSetting::clear_has_quickbartype() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void LayoutSetting::clear_quickbartype() {
  quickbartype_ = 0;
  clear_has_quickbartype();
}
inline ::google::protobuf::int32 LayoutSetting::quickbartype() const {
  return quickbartype_;
}
inline void LayoutSetting::set_quickbartype(::google::protobuf::int32 value) {
  set_has_quickbartype();
  quickbartype_ = value;
}

// optional int32 rightQuickBarType = 11 [default = 0];
inline bool LayoutSetting::has_rightquickbartype() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void LayoutSetting::set_has_rightquickbartype() {
  _has_bits_[0] |= 0x00000400u;
}
inline void LayoutSetting::clear_has_rightquickbartype() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void LayoutSetting::clear_rightquickbartype() {
  rightquickbartype_ = 0;
  clear_has_rightquickbartype();
}
inline ::google::protobuf::int32 LayoutSetting::rightquickbartype() const {
  return rightquickbartype_;
}
inline void LayoutSetting::set_rightquickbartype(::google::protobuf::int32 value) {
  set_has_rightquickbartype();
  rightquickbartype_ = value;
}

// repeated int32 questTraceBlockedIds = 12 [packed = true];
inline int LayoutSetting::questtraceblockedids_size() const {
  return questtraceblockedids_.size();
}
inline void LayoutSetting::clear_questtraceblockedids() {
  questtraceblockedids_.Clear();
}
inline ::google::protobuf::int32 LayoutSetting::questtraceblockedids(int index) const {
  return questtraceblockedids_.Get(index);
}
inline void LayoutSetting::set_questtraceblockedids(int index, ::google::protobuf::int32 value) {
  questtraceblockedids_.Set(index, value);
}
inline void LayoutSetting::add_questtraceblockedids(::google::protobuf::int32 value) {
  questtraceblockedids_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
LayoutSetting::questtraceblockedids() const {
  return questtraceblockedids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
LayoutSetting::mutable_questtraceblockedids() {
  return &questtraceblockedids_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace gamecfg

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_layoutsetting_2eproto__INCLUDED
